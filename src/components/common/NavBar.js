import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import { useState } from 'react';
import { useSelector, useDispatch } from 'react-redux';
import { Link, useLocation, useNavigate } from 'react-router-dom';
import { navItemList } from '../../data/nav';
import AuthButton from '../auth/AuthButton';
import { logout } from '../../modules/auth/store/authSlice';
import { setUser } from '../../modules/user/store/userSlice';
import { signOut } from 'firebase/auth';
import { auth } from '../../modules/firebase';
const NavBar = () => {
    const dispatch = useDispatch();
    const navigate = useNavigate();
    const authStatus = useSelector((state) => state.auth.status);
    const user = useSelector((state) => state.user.user);
    const location = useLocation();
    const isHomePage = location.pathname === '/';
    const [isMenuOpen, setIsMenuOpen] = useState(false);
    const [isUserMenuOpen, setIsUserMenuOpen] = useState(false);
    const handleLogout = async () => {
        try {
            await signOut(auth);
            dispatch(logout());
            dispatch(setUser(null));
            navigate('/');
            setIsUserMenuOpen(false);
        }
        catch (error) {
            console.error('Logout error:', error);
        }
    };
    return (_jsxs("div", { className: "w-full bg-white/95 backdrop-blur-sm border-b border-gray-100 shadow-sm", children: [_jsxs("nav", { className: "flex justify-between items-center px-4 py-3 max-w-7xl mx-auto", children: [_jsx("div", { className: "text-2xl font-bold", children: _jsx(Link, { to: "/", className: "bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent hover:from-blue-700 hover:to-purple-700 transition-all duration-200", children: "Fint" }) }), _jsxs("div", { className: "hidden md:flex items-center space-x-8", children: [isHomePage && (_jsx("ul", { className: "flex space-x-6", children: navItemList.map((item) => item.active ? (_jsx("li", { children: _jsx("a", { href: item.slug, className: "text-gray-600 hover:text-blue-600 transition-colors duration-200 font-medium", children: item.name }) }, item.name)) : null) })), !isHomePage && authStatus && (_jsxs("ul", { className: "flex space-x-6", children: [_jsx("li", { children: _jsx(Link, { to: "/dashboard", className: `text-gray-600 hover:text-blue-600 transition-colors duration-200 font-medium ${location.pathname === '/dashboard' ? 'text-blue-600' : ''}`, children: "Dashboard" }) }), _jsx("li", { children: _jsx(Link, { to: "/transactions", className: `text-gray-600 hover:text-blue-600 transition-colors duration-200 font-medium ${location.pathname === '/transactions' ? 'text-blue-600' : ''}`, children: "Transactions" }) }), _jsx("li", { children: _jsx(Link, { to: "/goals", className: `text-gray-600 hover:text-blue-600 transition-colors duration-200 font-medium ${location.pathname === '/goals' ? 'text-blue-600' : ''}`, children: "Goals" }) }), _jsx("li", { children: _jsx(Link, { to: "/investments", className: `text-gray-600 hover:text-blue-600 transition-colors duration-200 font-medium ${location.pathname === '/investments' ? 'text-blue-600' : ''}`, children: "Investments" }) })] }))] }), _jsxs("div", { className: "flex items-center space-x-4", children: [authStatus ? (_jsxs("div", { className: "relative", children: [_jsxs("button", { onClick: () => setIsUserMenuOpen(!isUserMenuOpen), className: "flex items-center space-x-2 bg-gradient-to-r from-blue-500 to-purple-600 text-white px-4 py-2 rounded-full hover:from-blue-600 hover:to-purple-700 transition-all duration-200 shadow-md", children: [_jsx("div", { className: "w-8 h-8 bg-white/20 rounded-full flex items-center justify-center", children: _jsx("span", { className: "text-sm font-semibold", children: user?.displayName?.charAt(0) || user?.email?.charAt(0) || 'U' }) }), _jsx("span", { className: "hidden sm:block font-medium", children: user?.displayName || 'User' }), _jsx("svg", { className: `w-4 h-4 transition-transform duration-200 ${isUserMenuOpen ? 'rotate-180' : ''}`, fill: "currentColor", viewBox: "0 0 20 20", children: _jsx("path", { fillRule: "evenodd", d: "M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z", clipRule: "evenodd" }) })] }), isUserMenuOpen && (_jsxs("div", { className: "absolute right-0 mt-2 w-48 bg-white rounded-xl shadow-lg border border-gray-100 py-2 z-50", children: [_jsxs("div", { className: "px-4 py-2 border-b border-gray-100", children: [_jsx("p", { className: "text-sm font-medium text-gray-800", children: user?.displayName || 'User' }), _jsx("p", { className: "text-xs text-gray-500", children: user?.email })] }), _jsx(Link, { to: "/profile", className: "block px-4 py-2 text-sm text-gray-700 hover:bg-gray-50 transition-colors duration-200", onClick: () => setIsUserMenuOpen(false), children: "Profile Settings" }), _jsx(Link, { to: "/billing", className: "block px-4 py-2 text-sm text-gray-700 hover:bg-gray-50 transition-colors duration-200", onClick: () => setIsUserMenuOpen(false), children: "Billing" }), _jsx(Link, { to: "/help", className: "block px-4 py-2 text-sm text-gray-700 hover:bg-gray-50 transition-colors duration-200", onClick: () => setIsUserMenuOpen(false), children: "Help & Support" }), _jsx("hr", { className: "my-2" }), _jsx("button", { onClick: handleLogout, className: "block w-full text-left px-4 py-2 text-sm text-red-600 hover:bg-red-50 transition-colors duration-200", children: "Sign Out" })] }))] })) : (_jsx(AuthButton, {})), _jsx("button", { onClick: () => setIsMenuOpen(!isMenuOpen), className: "md:hidden p-2 rounded-lg hover:bg-gray-100 transition-colors duration-200", children: _jsx("svg", { className: "w-6 h-6", fill: "none", stroke: "currentColor", viewBox: "0 0 24 24", children: _jsx("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: isMenuOpen ? "M6 18L18 6M6 6l12 12" : "M4 6h16M4 12h16M4 18h16" }) }) })] })] }), isMenuOpen && (_jsx("div", { className: "md:hidden bg-white border-t border-gray-100 shadow-lg", children: _jsxs("div", { className: "px-4 py-4 space-y-4", children: [isHomePage && navItemList.map((item) => item.active ? (_jsx("a", { href: item.slug, className: "block text-gray-600 hover:text-blue-600 transition-colors duration-200 font-medium", onClick: () => setIsMenuOpen(false), children: item.name }, item.name)) : null), !isHomePage && authStatus && (_jsxs(_Fragment, { children: [_jsx(Link, { to: "/dashboard", className: "block text-gray-600 hover:text-blue-600 transition-colors duration-200 font-medium", onClick: () => setIsMenuOpen(false), children: "Dashboard" }), _jsx(Link, { to: "/transactions", className: "block text-gray-600 hover:text-blue-600 transition-colors duration-200 font-medium", onClick: () => setIsMenuOpen(false), children: "Transactions" }), _jsx(Link, { to: "/goals", className: "block text-gray-600 hover:text-blue-600 transition-colors duration-200 font-medium", onClick: () => setIsMenuOpen(false), children: "Goals" }), _jsx(Link, { to: "/investments", className: "block text-gray-600 hover:text-blue-600 transition-colors duration-200 font-medium", onClick: () => setIsMenuOpen(false), children: "Investments" })] }))] }) }))] }));
};
export default NavBar;
